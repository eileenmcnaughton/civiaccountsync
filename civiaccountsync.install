<?php
// $Id$

/**
 * Implementation of hook_install
 */

function civiaccountsync_install(){
  // Use schema API to create database table
  drupal_install_schema('civiaccountsync');
}

/**
 * Implementation of hook_uninstall
 */
function civiaccountsync_uninstall(){
  // Use schema API to delete database table
  drupal_uninstall_schema('civiaccountsync');
  //Delete our module's variable from the variables table
  //TODO - remove any variables
}

/**
 * Implementation of hook_schema()
 */

function civiaccountsync_schema(){

  $schema['cas_errors'] = array(
  'description' => t('Errors generated by CiviAccountSync operations'),
  'fields' => array(
    'cas_eid' => array(
      'description' => t('Primary Key'),
      'type' => 'serial',
      'not null' => TRUE,
  ),
    'operation' => array(
      'description' => t('Operation that caused the error'),
      'type' => 'varchar',
      'length' => '255',
      'not null' => TRUE,
  ),
  'civicrm_entity_id' => array(
      'description' => t('CiviCrm entity ID'),
      'type' => 'int',
      'not null' => TRUE,
  ),

    'error_message' => array(
      'type' => 'varchar',
      'length' => '255',
      'not null' => TRUE,
  ),
      'error_description' => array(
      'type' => 'varchar',
      'length' => '255',
      'not null' => TRUE,
  ),
    'error_datetime' => array(
      'description' => t('timestamp when error recorded'),
      'type' => 'int',
      'length' => '11',
      'not null' => TRUE,
  ),
     'civicrm_amount' => array(
      'description' => t('Amount in CiviCRM'),
      'type' => 'float',
      'not null' => TRUE,
  ),
    'error_resolved' => array(
      'description' => t(''),
      'type' => 'bool',
      'not null' => TRUE,
  ),

  ),
  'primary key' => array('cas_eid'),
  'indexes' => array(
    'cas_iid'                 => array('cas_iid'),
  ),

  );

 /* $schema['cas_custom'] = array(
  'description' => t('Custom Sync Tracking Table'),
  'fields' => array(
    'cas_tid' => array(
      'description' => t('Primary Key'),
      'type' => 'serial',
      'not null' => TRUE,
  ),
    'name' => array(
      'description' => t('TODO: please describe this field!'),
      'type' => 'varchar',
      'length' => '32',
      'not null' => TRUE,
  ),
    'value' => array(
      'description' => t('TODO: please describe this field!'),
      'type' => 'varchar',
y
      'length' => '32',
      'not null' => TRUE,
  ),
    'last_sync' => array(
      'description' => t('TODO: please describe this field!'),
      'type' => 'int',
      'not null' => TRUE,
  ),
  ),
  'primary key' => array('cas_tid'),
  );
  */

  return $schema;


}


function civiaccountsync_update_6001() {
 $ret[] = update_sql("ALTER TABLE {cas_invoices} ADD INDEX `civicrm_iid` (`civicrm_iid`)");
  return $ret;
}


function civiaccountsync_update_6002() {
 $ret[] = update_sql("ALTER TABLE {cas_invoices} CHANGE `status` `civicrm_status` INT( 11 ) NOT NULL ");
 $ret[] = update_sql("ALTER TABLE {cas_invoices} DROP `last_sync`");
 return $ret;
}

function civiaccountsync_update_6003() {
 $ret[] = update_sql("ALTER TABLE {cas_invoices} ADD `acc_last_receipt` INT( 11 ) NOT NULL COMMENT '''Last Amount received in accounts package'");
 return $ret;
}